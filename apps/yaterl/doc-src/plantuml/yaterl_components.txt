@startuml ../../doc/img/yaterl_components.png

title YatERL Components Diagram

package "Yate" {
[yaterl_stdio_connection] - STDIO
STDIO - [Yate]
[yaterl_sup2] ..> [yaterl_stdio_connection]
}
 
package "YatERL" {
[yaterl_connection_mgr] <<gen_server>>
[yaterl_subscribe_mgr] <<gen_fsm>>
[yaterl_incoming_event_srv] <<gen_server>>
[CUSTOM MODULE] <<yaterl_gen_mod>>

[yaterl_sup] ..> [yaterl_connection_mgr]
[yaterl_sup] ..> [yaterl_subscribe_mgr]

[yaterl_stdio_connection] --> [yaterl_connection_mgr]: received_binary_data
[yaterl_connection_mgr] --> [yaterl_stdio_connection]: send_binary_data

[yaterl_connection_mgr] --> [yaterl_subscribe_mgr]: start_subscribe_sequence
[yaterl_subscribe_mgr] --> [yaterl_connection_mgr]: send_binary_data
[yaterl_connection_mgr] --> [yaterl_incoming_event_srv]: spawn and run
[yaterl_incoming_event_srv] --> [yaterl_connection_mgr]: send_binary_data
[yaterl_incoming_event_srv] --> [yaterl_subscribe_mgr]: handle_event / \nresolve_custom_module

[yaterl_incoming_event_srv] --> [CUSTOM MODULE]: handle_install_message /\n handle_watch_message
[CUSTOM MODULE] --> [yaterl_gen_mod]: implements / send / reply / ack
[yaterl_gen_mod] --> [yaterl_connection_mgr]: send_binary_data
} 

@enduml
